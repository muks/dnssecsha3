<?xml version="1.0"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<?rfc tocappendix="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="3"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<?rfc comments="no" ?>
<?rfc inline="yes" ?>
<rfc category="exp" docName="draft-muks-dnsop-dnssec-sha3-01" ipr="trust200902">

  <front>

    <title>Use of SHA-3 (Keccak) and RSASSA-PSS in DNSSEC</title>

    <author fullname="Jelte Jansen" initials="J." surname="Jansen">
      <organization>SIDN</organization>
      <address>
        <postal>
          <street>Meander 501</street>
          <city>Arnhem 6825 MD</city>
          <country>The Netherlands</country>
        </postal>
        <email>jelte.jansen@sidn.nl</email>
        <uri>https://www.sidn.nl/</uri>
      </address>
    </author>

    <author fullname="Mukund Sivaraman" initials="M." surname="Sivaraman">
      <organization>Internet Systems Consortium</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <code>94063</code>
          <region>CA</region>
          <country>US</country>
        </postal>
        <email>muks@mukund.org</email>
        <uri>https://www.isc.org/</uri>
      </address>
    </author>

    <date/>

    <!-- Meta-data Declarations -->

    <area>Operations and Management Area</area>
    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- <keyword>dns</keyword> -->

    <abstract>
      <t>This document specifies the use of SHA-3 (Keccak) hash
      functions in DNSSEC. It also specifies the use of the RSASSA-PSS
      signature scheme for RSA keys.</t>
    </abstract>

  </front>

  <middle>

    <section title="Introduction">
      <t>The Domain Name System (DNS) is the global, hierarchical
      distributed database for Internet Naming. The DNS has been
      extended to use cryptographic keys and digital signatures for the
      verification of the authenticity and integrity of its data. <xref
      target="RFC4033" />, <xref target="RFC4034" />, and <xref
      target="RFC4035" /> describe these DNS Security Extensions, called
      DNSSEC.</t>

      <t><xref target="RFC4033" /> describes how to store DNSKEY and
      RRSIG resource records, and specified a list of cryptographic
      algorithms to use. It was further updated by <xref
      target="RFC5702" /> to add the SHA-2 family of hash algorithms
      using the RSASSA-PKCS1-v1_5 signature scheme <xref
      target="RFC3447" />.</t>

      <t>RSA has introduced RSASSA-PSS which is a much better signature
      scheme than RSASSA-PKCS1-v1_5. The main advantage of RSASSA-PSS
      over RSASSA-PKCS1-v1_5 is that analysis can relate its security to
      that of the RSA problem (Section 8.1 of <xref target="RFC8017"
      />), whereas the connection of RSASSA-PKCS1-v1_5 to the RSA
      problem has not been proved. With RSASSA-PSS, an attacker also
      does not know in advance what the encoded message EM will be due
      to the use of random salt that makes fault analysis attacks more
      difficult to mount. Although no attacks are known against
      RSASSA-PKCS1-v1_5, in the interest of increased robustness,
      RSASSA-PSS is REQUIRED in new applications (Section 8 of <xref
      target="RFC8017" />).</t>

      <t>SHA-3 is a new family of hash functions based on the
      cryptographic primitive family Keccak. <xref
      target="FIPS.202.2015" /> states: "The four SHA-3 hash functions
      in this Standard supplement the hash functions that are specified
      in <xref target="FIPS.180-4.2015" />: SHA-1 and the SHA-2
      family. Together, both Standards provide resilience against future
      advances in hash function analysis, because they rely on
      fundamentally different design principles." Now that SHA-1's
      security is known to be weakened and the SHA-2 hash algorithms are
      currently the last line of defence for use with RSA in DNSKEYs,
      and in DS records, it is sensible to introduce the SHA-3 hash
      family now to prepare for any eventuality. The SHA-3 hash function
      family uses a sponge construction algorithm that is different from
      the SHA-2 hash function family which uses a Merkle-Damgaerd
      construction, so the probability that an attack on SHA-2 will
      affect SHA-3 or vice versa is minimal.</t>
      
      <t>This document extends the list of DNSKEY algorithms with SHA-2
      and SHA-3 family of algorithms using the RSASSA-PSS signature
      scheme <xref target="RFC8017" />, and specifies how to store
      DNSKEY data and how to produce RRSIG resource records.</t>

      <t><xref target="RFC3658" /> first described the use of DS
      resource records. It was further updated by <xref target="RFC4509"
      /> and <xref target="RFC6605" /> to add SHA-256 and SHA-384 digest
      types respectively. This document extends that list with the SHA-3
      algorithms SHA3-256 and SHA3-384.</t>

      <t>Familiarity with DNSSEC, RSA, and the SHA-2 <xref
      target="FIPS.180-4.2015" /> and SHA-3 <xref target="FIPS.202.2015"
      /> families of algorithms is assumed in this document.</t>

      <t>To refer to SHA2-256 and SHA2-512, this document will use the
      name SHA-2. Similarly, to refer to SHA3-256, SHA3-384, and
      SHA3-512, this document will use the name SHA-3. This is done to
      improve readability. When a part of text is specific for a
      particular SHA-2 or SHA-3 hash function, their specific names are
      used. The same goes for RSA/SHA3-256 and RSA/SHA3-512 which will
      be grouped using the name RSA/SHA-2, and RSA/SHA3-256,
      RSA/SHA3-384, and RSA/SHA3-512, which will be grouped using the
      name RSA/SHA-3.</t>

      <t>SHA2-224, SHA2-384, and SHA3-224 algorithms are not used in
      DNSKEYs and RRSIGs. SHA3-224 and SHA3-512 algorithms are not used
      as DS digest types.</t>

      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
      in this document are to be interpreted as described in <xref
      target="RFC2119" />.</t>

      <section title="BIND implementation (Editor: to be removed before publication)">
        <t>An experimental BIND implementation of this draft can be
        found in the "sha3" branch in the git repository at:
        https://github.com/muks/bind9</t>

        <t>It can be used to check for interoperability by other DNSSEC
        implementations.</t>
      </section>

    </section>

    <section title="DNSKEY Resource Records" anchor="dnskey-rrs">
      <t>The format of the DNSKEY RR can be found in <xref
      target="RFC4034" />. <xref target="RFC3110" /> and <xref
      target="RFC5702" /> describe the use of RSASSA-PKCS1-v1_5
      signature scheme with SHA-1 and SHA-2 hash functions for DNSSEC
      signatures respectively.</t>

      <t>RSA public keys for use with RSASSA-PSS signature scheme using
      SHA-2 and SHA-3 hash functions are stored in DNSKEY resource
      records (RRs) with the algorithm numbers as specified in <xref
      target="iana" />.</t>

      <t>The key size of RSA/SHA2-256 and RSA/SHA3-256 keys MUST NOT be
      less than 1024 bits and MUST NOT be more than 4096 bits. This also
      satisfies a requirement of the RSASSA-PSS signature scheme that
      for a hash function that outputs a 256-bit value, the RSA modulus
      be at least 522 bits long.</t>

      <t>The key size of RSA/SHA3-384 keys MUST NOT be less than 1024
      bits and MUST NOT be more than 4096 bits. This also satisfies a
      requirement of the RSASSA-PSS signature scheme that for a hash
      function that outputs a 384-bit value, the RSA modulus be at least
      778 bits long.</t>

      <t>The key size of RSA/SHA2-512 and RSA/SHA3-512 keys MUST NOT be
      less than 1280 bits and MUST NOT be more than 4096 bits. This also
      satisfies a requirement of the RSASSA-PSS signature scheme that
      for a hash function that outputs a 512-bit value, the RSA modulus
      be at least 1034 bits long.</t>
    </section>

    <section title="RRSIG Resource Records">
      <t>For signature calculation, this section uses the specifications
      of RSASSA-PSS in PKCS #1 v2.2 (Section 8.1 of <xref
      target="RFC8017" />) incorporating EMSA-PSS encoding (Section 9.1
      of <xref target="RFC8017" />).</t>

      <t>The values for the RRSIG RDATA fields that precede the
      signature data are specified in <xref target="RFC4034" />.  The
      value of the signature field in the RRSIG RDATA follows the
      RSASSA-PSS signature scheme and is calculated as described in
      Section 8.1.1 of <xref target="RFC8017" />. The message M used in
      signature calculation is the argument to the sign() function as
      specified in Section 3.1.8.1 of <xref target="RFC4034" />.</t>

      <t>Within EMSA-PSS-ENCODE, the hash function "Hash" used is one
      among SHA2-256, SHA2-512, SHA3-256, SHA3-384, and SHA3-512 for
      RSA/SHA2-256, RSA/SHA2-512, RSA/SHA3-256, RSA/SHA3-384, and
      RSA/SHA3-512 respectively.</t>

      <t>The mask generation function is MGF1 (Section B.2.1. of <xref
      target="RFC8017" />) and the hash function used within the mask
      generation function is also "Hash".</t>

      <t>The length of salt in octets MUST be equal to the length of the
      output of the hash function "Hash" in octets. The value of salt
      SHOULD be random per signature computation. A random salt value
      enhances the security of the scheme by affording a "tighter"
      security proof. However, the randomness is not critical to
      security. See Section 8.1 of <xref target="RFC8017" /> for the
      tradeoffs in security due to a non-random salt.</t>

      <t>These RSASSA-PSS signatures are stored in the DNS using RRSIG
      resource records (RRs) with algorithm number as specified in <xref
      target="iana" />.</t>
    </section>

    <section title="DS Resource Records">
      <t>The format of the DS RR can be found in <xref target="RFC4034"
      />. <xref target="RFC3658" />, <xref target="RFC4509" />, and
      <xref target="RFC6605" /> describe the use of SHA-1, SHA-256, and
      SHA-384 for the DS digest type respectively.</t>

      <section title="SHA3-256 digest type DS Resource Records">
        <t>The implementation of SHA3-256 in DS RRs follows the
        implementation of SHA-256 as specified in <xref target="RFC4509"
        /> except that the underlying algorithm is SHA3-256, the digest
        value is 32 bytes long, and the digest type code is specified in
        <xref target="iana" />.</t>
      </section>

      <section title="SHA3-384 digest type DS Resource Records">
        <t>The implementation of SHA3-384 in DS RRs follows the
        implementation of SHA-256 as specified in <xref target="RFC4509"
        /> except that the underlying algorithm is SHA3-384, the digest
        value is 48 bytes long, and the digest type code is specified in
        <xref target="iana" />.</t>
      </section>
    </section>

    <section title="Deployment Considerations">
      <section title="Key Sizes">
        <t>Apart from the restrictions in <xref target="dnskey-rrs" />,
        this document will not specify what size of keys to use. That is
        an operational issue and depends largely on the environment and
        intended use. A good starting point for more information would
        be <xref target="NIST800-57" />.</t>
      </section>

      <section title="Signature Sizes">
        <t>In this family of signing algorithms, the size of signatures
        is related to the size of the key and not to the hashing
        algorithm used in the signing process. Therefore, RRSIG resource
        records produced with RSA/SHA2-256, RSA/SHA2-512, RSA/SHA3-256,
        RSA/SHA3-384, or RSA/SHA3-512 will have the same size as those
        produced with RSA/SHA-1 and RSA/SHA-2 hash algorithms, if the
        keys have the same length.</t>
      </section>

      <section title="DS Sigest Sizes">
        <t>DS RDATA with digest type SHA3-256 has the same size as DS
        RDATA with digest type SHA-256 (32 bytes). DS RDATA with digest
        type SHA3-384 has the same size as DS RDATA with digest type
        SHA-384 (48 bytes). Corresponding to these existing digest
        types, it should be possible to understand the impact of the
        size of DS RDATA when using the new SHA-3 digest types.</t>
      </section>
    </section>

    <section title="Implementation Considerations">
      <section title="Support for SHA-3 Signatures">
        <t>DNSSEC-aware implementations SHOULD be able to support RRSIG
        and DNSKEY resource records created with the RSA/SHA-2 and
        RSA/SHA-3 algorithms as defined in this document.</t>
      </section>

      <section title="Support for SHA-3 DS Digest Types">
        <t>DNSSEC-aware implementations SHOULD be able to support DS
        resource records created with the SHA3-256 and SHA3-384
        algorithms as defined in this document.</t>
      </section>

      <section title="Support for NSEC3 Denial of Existence">
        <t><xref target="RFC5155" /> defines new algorithm identifiers
        for existing signing algorithms, to indicate that zones signed
        with these algorithm identifiers can use NSEC3 as well as NSEC
        records to provide denial of existence. That mechanism was
        chosen to protect implementations predating <xref
        target="RFC5155" /> from encountering resource records about
        which they could not know. This document does not define such
        algorithm aliases.</t>

        <t>A DNSSEC validator that implements RSA/SHA2 and/or RSA/SHA-3
        MUST be able to validate negative answers in the form of both
        NSEC and NSEC3 with hash algorithm 1, as defined in <xref
        target="RFC5155" />.  An authoritative server that does not
        implement NSEC3 MAY still serve zones that use RSA/SHA-2 or
        RSA/SHA-3 with NSEC denial of existence.</t>
      </section>
    </section>

    <section title="Examples">
      <section title="RSA/SHA3-256 Key and Signature">
        <t>Given a 1024-bit private key with the following values (in Base64):</t>

        <figure>
          <artwork>
      Private-key-format: v1.2
      Algorithm: 249 (RSASHA3-256)
      Modulus: v/oS+J8ADp6D+aMAGuwCAgCvCn8SCoj2squtB0q3PMSdmHlr1yyWoCAPYfb8EwPlnNYjV1ztHkE8ske7saP7DlL9DDxTPn46Pg3RiM4ewlpKlfZm5eZrSODbxTMH9H4xXuwzHNv7W49Zi6rmtO3lVGM3U62cL8Snnh5v/iW/weU=
      PublicExponent: AQAB
      PrivateExponent: lJsVEmWqWqa0DIrz6uMkTr6OwPZKVeNd7ELeZtWccCrWv4/GPcNjOcJ3heL1kBalKDnPE7J4TsI7JNpIXaNNE5lFoCUPhtVqJBUl+M2EeLuKR9CGOOCSI94/F3AUXlcf3961EA8kphmuAarmzR+pbIn0xnOQuM+nEWYfGogEsMU=
      Prime1: 9yGjgfQdbEuHP1zOyORVnO/Fn1l73TxFA19yBN8D/loauJElfcti6bzJykPNcoxgFsdhlnDK7aLIJB2U+PSwHw==
      Prime2: xt29BEUpbpOEJqictutmTkCAQzNLT3o7XdyeWmGGk575zqxXrdqFt66suq5rabu/jbQc8PqTKEYX5paxa9B9ew==
      Exponent1: ogunqEXGqUUZKP4VBXtbe+1o+yT06EtlwWFrZTBK8RRqIw3htIuRj0xgUMWGyI6tTyJrpfbNyWaMr8nJ7jib5w==
      Exponent2: d1l0qy9m4joeQaVICG/WgngrgikytYxCPN6/GrcVMVtjySmdpXVUcxyeBZvQUzCekcja5bU8xBrtFTKzYGVMKQ==
      Coefficient: B7Kj5lCvBk4i0HvhoaWdEF0Z9PO8RVHVRqQIJPIpXtN8lNEOUuAQg0a9pKUFD3w2oTh2dk4xie3GxyJDMGguPA==
          </artwork>
        </figure>

        <t>The DNSKEY record for this key would be:</t>

        <figure>
          <artwork>
      example.org. IN DNSKEY 256 3 249 AwEAAb/6EvifAA6eg/mjABrsAgIArwp/EgqI9rKrrQdKtzzEnZh5a9cs lqAgD2H2/BMD5ZzWI1dc7R5BPLJHu7Gj+w5S/Qw8Uz5+Oj4N0YjOHsJa SpX2ZuXma0jg28UzB/R+MV7sMxzb+1uPWYuq5rTt5VRjN1OtnC/Ep54e b/4lv8Hl
          </artwork>
        </figure>

        <t>With this key, sign the following RRSet, consisting of 1 A record:</t>

        <figure>
          <artwork>
      example.org. 3600  IN  A  192.0.2.91
          </artwork>
        </figure>

        <t>If the inception date is set at 00:00 hours on January 1st,
        2000, and the expiration date at 00:00 hours on January 1st,
        2030, the following signature should be created:</t>

        <figure>
          <artwork>
      example.org.                      3600  IN  RRSIG   A 249 2 3600 (
                                        20300101000000 20000101000000 53767 example.org.
                                        EiYve+lvKloKpzFXR9pGpqkPD6ZLgpOiZ8Ua
                                        m4LJkuNSD2pS95nlFESQT3SCp0RsK0JVEFIg
                                        c2KRJsVFkdTGf6y/i74h4UBDaSGEOoUNvRXd
                                        4j+P/ishkiC46c1KSu4MqxzFjz4DVqaOGt9d
                                        Nlm8fHKcq8WfAAByORwilDpAH14= )
          </artwork>
        </figure>

      </section>

      <section title="RSA/SHA3-384 Key and Signature">
        <t>Given a 1024-bit private key with the following values (in Base64):</t>

        <figure>
          <artwork>
      Private-key-format: v1.2
      Algorithm: 250 (RSASHA3-384)
      Modulus: 1mTG6tg39IXsvEqqKtTenJdnawiQSNIQIgRy/BbZQP7Qu+j3l6DmFgpw5DfHApRox9fYjJR6shpDsmfGC11gMqJzaSaXRpgd4ER1pSMl3qX7FJ749WySSxC6iOmAQ3zjYSND3HxCVgJBojvm64yQGOaS0d/qMhmamMPY1KMT03E=
      PublicExponent: AQAB
      PrivateExponent: XDI0VJOs5GufVY2qRgcKwD5fy+h/28DyDR7qr7vHq6qo6tYRe1RG/d15lLrjyxk1QhNxXWsQpHyk9hioUwTRs8sLiaSGZLlrSTR8X2a0+Ux7SMPE4F13fewYjbUaW+lYspx5gbzLUvztmaIB7YV7RdtgTTM8Yzw9wRnMU4QVhME=
      Prime1: 8ii1QhM8POBWqrrLdeg5l5Oqb7WPXMOpmaKyf3feSYZUb2xy6qTFQzo7YcIOB+Nd2HqEwN5nxiADgtaNAB6laQ==
      Prime2: 4qXNygKERta5ko7JjYSRjxfzPrMK6jY+GHdQ3zDoVSOyZJPt4E4h3JvGheO5CQXmdYucZafgcqBQD1rLq6HUyQ==
      Exponent1: ZXX+9A9hJtSMG36mbuF89/Br8eAtkB1++xs7FMNhhIbe68yRnZSp/g/w/3WyMUXndSNoafMFofKZ5gEFFO7COQ==
      Exponent2: ruhlt8/ZZRGwhHnM8XmtG1DQV0K02aqioR7zOkr0AUBbG2NN4Bxr5WQSAKGM2nnDMFNdjtXPUKaHIlJfe0SYgQ==
      Coefficient: JCIHcbynHteOdmwqYAPEN0taYxb1tNvJKb9sYu9u8v3GQAia0DxGm+XIZxxExpwUDqqB3L12QYli65bsLIrkPg==
          </artwork>
        </figure>

        <t>The DNSKEY record for this key would be:</t>

        <figure>
          <artwork>
      example.org. IN DNSKEY 256 3 250 AwEAAdZkxurYN/SF7LxKqirU3pyXZ2sIkEjSECIEcvwW2UD+0Lvo95eg 5hYKcOQ3xwKUaMfX2IyUerIaQ7JnxgtdYDKic2kml0aYHeBEdaUjJd6l +xSe+PVskksQuojpgEN842EjQ9x8QlYCQaI75uuMkBjmktHf6jIZmpjD 2NSjE9Nx
          </artwork>
        </figure>

        <t>With this key, sign the following RRSet, consisting of 1 A record:</t>

        <figure>
          <artwork>
      example.org. 3600  IN  A  192.0.2.91
          </artwork>
        </figure>

        <t>If the inception date is set at 00:00 hours on January 1st,
        2000, and the expiration date at 00:00 hours on January 1st,
        2030, the following signature should be created:</t>

        <figure>
          <artwork>
      example.org.                      3600  IN  RRSIG   A 250 2 3600 (
                                        20300101000000 20000101000000 58391 example.org.
                                        O6/yCttmjt0KMyPMNIuM4Hl76Eq0fAfBVhpx
                                        GLU/ozJBlLbuvBmnExOMyIKpx8zOwNe8GSnm
                                        8wF0chAFHCkdAA2KiJSwFlAstw6HGC5X+/Ou
                                        eqhw6GVXMdP+9CdS3HfnjBR0N7zE/5mWgQp2
                                        SxmjcNe1Z+Tfx14cZDV7Fm3tpEU= )
          </artwork>
        </figure>

      </section>

      <section title="RSA/SHA3-512 Key and Signature">
        <t>Given a 1024-bit private key with the following values (in Base64):</t>

        <figure>
          <artwork>
      Private-key-format: v1.2
      Algorithm: 251 (RSASHA3-512)
      Modulus: 1xcZnBvTsdnF3QW2VlGZOMw5Lo/Av8cv4ogyFmngVsSZkqT3TwJNZ3bSCG70Aer5tQkyf+cx8INu4ZGC/CpTuaaxnEFpH0G2fPSadRwELcqf7LQKjLU9kjrdS8bFTElw0ugukXF/TJ1/KOywFsOHfFQ14Gqk5RB7EL8lXf1ZESs=
      PublicExponent: AQAB
      PrivateExponent: I4b8Qu3RvLm01fogkQdvYJNTCp7R/ptfDHLkmxEn7g0RNMis1M8Ti/hzXtM82KhAUKfRQJEmjYyYHwgS86XmKCGPslN1rZR9K1vXadHH2PKu4CL1ZLArWLz7Y9lpuVRVvlqrMM3IAVm7pTpd8Bx2jtD7Xt/9yXKW4TjIp/ctN4E=
      Prime1: 80uohrGN+E1OWMwxLRK0Jl32BwfJ7XnP3HiAdhhGnwi/zPbp/Ngpj985avjmabVNN8JzRIOnqjAjIMP0u6RG6w==
      Prime2: 4lJlpIjD6kz48ukFNjSY6qowVf5k54AyRJDnS+irwDuZKZtSxPghqgPyrOUIbAPRC+RmnP9dOOECS7rzuaxOwQ==
      Exponent1: KNm/Rj5x1AtG6GoAp8zIKtkEAlIweYtGd4JUL4AL+5AAhG3BBA9Xiyyz+14ncgBbIs2nhQ2GDXFftJSydv8yWQ==
      Exponent2: oUOpHWY+g3M5aIzVo9wyofOG4Z+VcseMCgNebF5sE1vkNRtyDNvp0OVjRAMmzyChEmI7I99qI59hLWkXRdQbgQ==
      Coefficient: JpZ110OE8oR9yBPGrnoTxRht6SXFPOUmj8wCgvqgqROBc8uN2s87FPJqTSsN3qQTNg987OQii7+EYobCs93Z7g==
          </artwork>
        </figure>

        <t>The DNSKEY record for this key would be:</t>

        <figure>
          <artwork>
      example.org. IN DNSKEY 256 3 251 AwEAAdcXGZwb07HZxd0FtlZRmTjMOS6PwL/HL+KIMhZp4FbEmZKk908C TWd20ghu9AHq+bUJMn/nMfCDbuGRgvwqU7mmsZxBaR9Btnz0mnUcBC3K n+y0Coy1PZI63UvGxUxJcNLoLpFxf0ydfyjssBbDh3xUNeBqpOUQexC/ JV39WREr
          </artwork>
        </figure>

        <t>With this key, sign the following RRSet, consisting of 1 A record:</t>

        <figure>
          <artwork>
      example.org. 3600  IN  A  192.0.2.91
          </artwork>
        </figure>

        <t>If the inception date is set at 00:00 hours on January 1st,
        2000, and the expiration date at 00:00 hours on January 1st,
        2030, the following signature should be created:</t>

        <figure>
          <artwork>
      example.org.                      3600  IN  RRSIG   A 251 2 3600 (
                                        20300101000000 20000101000000 7458 example.org.
                                        PqdYQGN2Ml9ttU6ZqcL8iNKbhkw5nHuxnUFK
                                        luR7aMMKNtPaVC7P4SjIGXmbhEA9/EQ4UhAg
                                        +ekqwANViVuhEwbg//mJ+ffOq18qWRxWUKxX
                                        HPbtBvJDSuvo04D2BTZIx9qMMjvrMWuowlol
                                        mrz3bvDRtQkoD5kZQPLAD6+r6Ps= )
          </artwork>
        </figure>

      </section>
      <section title="SHA3-256 as DS Digest Type">
        <t>Given a 1024-bit RSA/SHA-256 DNSKEY with the following contents:</t>

        <figure>
          <artwork>
      example.org. IN DNSKEY 256 3 8 AwEAAbljrZZb1Qyq8ui+vnYL5exWSrQYFkCFD6VvJoJr5ADo7CxZiyxu sJM6oVHF7pA22rKJqjgIR9lksZ1+nT2WcwdXQuAFLrLFAI5L42mQKOHS hx1S3vHosO0iSIX47IyyR2O+J9qLhy7B+T4cJzAq2dOtSziqL1l5BCtw 5ZNYJX8N
          </artwork>
        </figure>

        <t>The DS record for this key with digest type SHA3-256 would be:</t>

        <figure>
          <artwork>
      example.org. IN DS 25803 8 252 AE03EA9388D4BA12725999B8E2C4ED14E06EAE8B78229B81154F61FE8EDBAA5F
          </artwork>
        </figure>
      </section>

      <section title="SHA3-384 as DS Digest Type">
        <t>Given a 1024-bit RSA/SHA-256 DNSKEY with the following contents:</t>

        <figure>
          <artwork>
      example.org. IN DNSKEY 256 3 8 AwEAAbljrZZb1Qyq8ui+vnYL5exWSrQYFkCFD6VvJoJr5ADo7CxZiyxu sJM6oVHF7pA22rKJqjgIR9lksZ1+nT2WcwdXQuAFLrLFAI5L42mQKOHS hx1S3vHosO0iSIX47IyyR2O+J9qLhy7B+T4cJzAq2dOtSziqL1l5BCtw 5ZNYJX8N
          </artwork>
        </figure>

        <t>The DS record for this key with digest type SHA3-384 would be:</t>

        <figure>
          <artwork>
      example.org. IN DS 25803 8 253 BA8A4350F844CCCB8308694B3ADD478FC7EFBAC936D82D482D88F792FAB0766567E1F58F3A1075708CCC0457C9435ECA
          </artwork>
        </figure>
      </section>

    </section>

    <section title="Security considerations">
      <section title="Considerations for RRSIG Resource Records">
        <t>DNSSEC implementations are encouraged to implement the new
        algorithms in this document as soon as possible now that SHA-1's
        security is known to be degraded and the SHA-2 hash algorithms
        are currently the last line of defence for use with RSA in
        DNSSEC.</t>

        <t>Users of DNS software are encouraged to deploy these new
        algorithms with DNSSEC when software implementations allow for
        it. Users are encouraged to run DNSSEC validator implementations
        that support these new algorithms when they are available.</t>

        <t>The RSASSA-PSS signature scheme and the SHA-3 hash function
        family are considered sufficiently strong for the immediate
        future, but predictions about future development in cryptography
        and cryptanalysis are beyond the scope of this document.</t>
      </section>

      <section title="Signature Type Downgrade Attacks">
        <t>Since each RRSet MUST be signed with each algorithm present
        in the DNSKEY RRSet at the zone apex (see Section 2.2 of <xref
        target="RFC4035" />), a malicious party cannot filter out the
        RSASSA-PSS RRSIG and force the validator to use a RSA/SHA-1
        signature if both are present in the zone. This should provide
        resilience against algorithm downgrade attacks, if the validator
        supports RSASSA-PSS.</t>
      </section>
    </section>

    <section title="IANA considerations" anchor="iana">
      <t>This document updates the IANA registry "Domain Name System
      Security (DNSSEC) Algorithm Numbers"
      (http://www.iana.org/protocols). The following entries are added
      to the registry:</t>

      <texttable>

        <ttcol>No.</ttcol>
        <ttcol>Description</ttcol>
        <ttcol>Mnemonic</ttcol>
        <ttcol>Z.S.</ttcol>
        <ttcol>T.S.</ttcol>
        <ttcol>Ref.</ttcol>

        <c>245 [TBD]</c>
        <c>ECDSA Curve P-256 with SHA3-256</c>
        <c>ECDSAP256SHA3-256</c>
        <c>Y</c>
        <c>*</c>
        <c>[TBD]</c>

        <c>256 [TBD]</c>
        <c>ECDSA Curve P-384 with SHA3-384</c>
        <c>ECDSAP256SHA3-384</c>
        <c>Y</c>
        <c>*</c>
        <c>[TBD]</c>

        <c>247 [TBD]</c>
        <c>RSA/SHA2-256 with RSASSA-PSS</c>
        <c>RSASHA2-256</c>
        <c>Y</c>
        <c>*</c>
        <c>[TBD]</c>

        <c>248 [TBD]</c>
        <c>RSA/SHA2-512 with RSASSA-PSS</c>
        <c>RSASHA2-512</c>
        <c>Y</c>
        <c>*</c>
        <c>[TBD]</c>

        <c>249 [TBD]</c>
        <c>RSA/SHA3-256 with RSASSA-PSS</c>
        <c>RSASHA3-256</c>
        <c>Y</c>
        <c>*</c>
        <c>[TBD]</c>

        <c>250 [TBD]</c>
        <c>RSA/SHA3-384 with RSASSA-PSS</c>
        <c>RSASHA3-384</c>
        <c>Y</c>
        <c>*</c>
        <c>[TBD]</c>

        <c>251 [TBD]</c>
        <c>RSA/SHA3-512 with RSASSA-PSS</c>
        <c>RSASHA3-512</c>
        <c>Y</c>
        <c>*</c>
        <c>[TBD]</c>

      </texttable>

      <t>This document updates the IANA registry "Delegation Signer (DS)
      Resource Record (RR) Type Digest Algorithms"
      (http://www.iana.org/protocols). The following entries are added
      to the registry:</t>

      <texttable>

        <ttcol>Value</ttcol>
        <ttcol>Description</ttcol>
        <ttcol>Status</ttcol>
        <ttcol>References</ttcol>

        <c>252 [TBD]</c>
        <c>SHA3-256</c>
        <c>OPTIONAL</c>
        <c>[TBD]</c>

        <c>253 [TBD]</c>
        <c>SHA3-384</c>
        <c>OPTIONAL</c>
        <c>[TBD]</c>

      </texttable>
    </section>

    <section title="Acknowledgements">
      <t>Thanks to Francis Dupont and Paul Hoffman for review and
      suggestions.</t>
    </section>

  </middle>

  <back>

    <references title="Normative references">
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.3110.xml"?>
      <?rfc include="reference.RFC.3447.xml"?>
      <?rfc include="reference.RFC.3658.xml"?>
      <?rfc include="reference.RFC.4033.xml"?>
      <?rfc include="reference.RFC.4034.xml"?>
      <?rfc include="reference.RFC.4035.xml"?>
      <?rfc include="reference.RFC.4509.xml"?>
      <?rfc include="reference.RFC.5155.xml"?>
      <?rfc include="reference.RFC.5702.xml"?>
      <?rfc include="reference.RFC.6605.xml"?>
      <?rfc include="reference.RFC.8017.xml"?>

      <reference anchor="FIPS.180-4.2015" target="http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf">
	<front>
	  <title>Secure Hash Standard</title>
	  <author>
	    <organization>National Institute of Standards and Technology</organization>
	  </author>
	  <date month="August" year="2015" />
	</front>
	<seriesInfo name="FIPS" value="PUB 180-4" />
      </reference>

      <reference anchor="FIPS.202.2015" target="http://dx.doi.org/10.6028/NIST.FIPS.202">
        <front>
          <title>SHA-3 Standard: Permutation-Based Hash and Extendable-Output Functions</title>
          <author>
            <organization>National Institute of Standards and Technology</organization>
          </author>
          <date month="August" year="2015" />
        </front>
        <seriesInfo name="FIPS" value="PUB 202" />
      </reference>

    </references>

    <references title="Informative references">

      <reference anchor="NIST800-57">
        <front>
          <title>Recommendation for Key Management</title>
          <author fullname="Elaine Barker" initials="E." surname="Barker" />
          <author fullname="William Barker" initials="W." surname="Barker" />
          <author fullname="William Burr" initials="W." surname="Burr" />
          <author fullname="William Polk" initials="W." surname="Polk" />
          <author fullname="Miles Smid" initials="M." surname="Smid" />
          <date month="March" year="2007" />
        </front>
        <seriesInfo name="NIST" value="SP 800-57" />
      </reference>

    </references>

    <section title="Change history (Editor: to be removed before publication)">
      <t>
        <list style="symbols">

          <t>
          draft-muks-dnsop-dnssec-sha3-01
          <vspace/>
          Use RSASSA-PSS instead of RSASSA-PKCS1-v1_5. Specify DNSSEC
          algorithms using RSASSA-PSS for SHA-2 hash functions
          too. Other fixes.
          </t>

          <t>
          draft-muks-dnsop-dnssec-sha3-00
          <vspace/>
          Initial draft.
          </t>

        </list>
      </t>
    </section>

  </back>
</rfc>
